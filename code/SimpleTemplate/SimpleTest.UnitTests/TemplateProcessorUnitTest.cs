using System;
using System.Collections;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Newtonsoft.Json.Linq;
using System.Collections.Generic;

namespace SimpleTest.UnitTests
{
    [TestClass]
    public class TemplateProcessorUnitTest
    {
        #region attributes
        private JObject _Data = JObject.Parse("{'ID':1,'Operation':'store changed','OldStore':{'Stores':['Lambton Quay','Willis Street'],'Manufacturers':[{'Name':'Acme Co','Products':[{'Name':'Anvil','Price':50}]},{'Name':'Contoso','Products':[{'Name':'Elbow Grease','Price':99.95},{'Name':'Headlight Fluid','Price':4},{'Name':'Milk','Price':2}]}]},'NewStore':{'Stores':['Lambton Quay','Willis Street','Shobra Street'],'Manufacturers':[{'Name':'Acme Company','Products':[{'Name':'Anvil','Price':50},{'Name':'Beans','Price':10,'Available':true}]},{'Name':'Contoso','Products':[{'Name':'Elbow Grease','Price':99.95}]}]}}");

        private JObject _Data2 = JObject.Parse("{'@Id':0,'@Operation':'CustomerOrderUpdated','@Date':'2018-07-3013: 51: 00','@Reason':'CustomerOrderUpdated','@Source':'Customer Order Updated','@UCID':'9999000009','@ActionByUsername':'admin','@PurchaseOrderNumber':'PON_12345678','@PurchaseOrderNumberID':30,'CustomerProfile':{'@ID':10013,'@Title':'Ms','@BusinessTitle':null,'@UCID':'9999000009','@Username':'User124','@BirthDate':'2018-05-2200: 00: 00','@Gender':'Male','@ProfileType':'Subscriber','@IsCorporate':false,'@CorporateDueDay':null,'@Status':'Active','@Reason':'Active','@GeographicalRegion':'Begam','@OrganizationHierarchy':null,'@CSOOrganizationHierarchy':'Maadi','@Nationality':'Egypt','@MembershipDate':'2018-05-2900: 00: 00','@Comments':'','@Occupation':'Manager','@CompanyActivity':'Communications','@ProfileCreatorID':1,'@NationalID':'','@PassportID':'','NameList':{'Name':[{'@Language':'English','@FirstName':'User','@MiddleName':'2','@LastName':'4'}]},'EmailList':{'Email':[{'@Email':'User124@xyz.com','@EmailType':'Preferred'}]},'TelephoneList':{'Telephone':[{'@TelephoneNo':'0212345678','@TelephoneType':'HomeTelephone'}]},'AddressList':{'Address':[{'@Language':'English','@Address1':'cairo','@Address2':'','@ZipCode':''}]},'ContactList':{'Contact':[]},'ProfileRelationsList':{'ProfileRelation':[{'@RelationType':'hasparent','@ProfileID':10,'@ProfileUCID':'9999000003'}]},'ProfileCategoryList':{'ProfileCategory':[{'@ProfileCategoryName':'BC_Initiative2011'}]}},'OldCustomerOrder':{'@ID':24,'@BusinessStatus':'New','@PurchaseOrderNumber':'PON_12345678','@PurchaseOrderNumberID':30,'@PurchaseDate':'2018-07-2511: 13: 51','@ResellerUsername':'','@ResellerProfileID':null,'@ResellerUCID':'','@ResellerType':'','@PaymentTerm':1,'@ContractDuration':12,'@SalesAllocation':'Roma','@BillingLocation':'CUSTOMER','@IsCommitment':false,'@PaymentMethod':'Cash','@ProfileID':10013,'@AccountManagerID':1,'@AccountManagerName':'administrator','@SaleCreatorID':1,'@SaleCreatorName':'administrator','@UCID':'9999000009','CustomerOrderItemList':{'CustomerOrderItem':[{'@ID':32,'@CustomerOrderID':24,'@ProductOfferingID':5,'@ProductOfferingName':'StarterSolar','@ProductOfferingFamilyID':5,'@ProductOfferingFamilyName':'Solar','@ProductCatalogID':1,'@ProductCatalogName':'StandardConsumers','@ActivationPrice':'120','@InstallmentPrice':'120','DiscountList':{'Discount':[{'@ID':21,'@CustomerOrderItemID':32,'@AmountInPercent':'50','@Precedence':2,'@DiscountSpecificationID':1,'@DiscountSpecificationName':'FamilyandFriends','@MainCount':null,'@RemainingCount':null,'@IsActive':true,'@StartDate':'2018-07-2511: 14: 24','@EndDate':'2028-07-2511: 14: 24'},{'@ID':22,'@CustomerOrderItemID':32,'@AmountInPercent':'10','@Precedence':2,'@DiscountSpecificationID':2,'@DiscountSpecificationName':'VIP','@MainCount':null,'@RemainingCount':null,'@IsActive':true,'@StartDate':'2018-07-2511: 14: 24','@EndDate':'2028-07-2511: 14: 24'}]},'ProductList':{'Product':[{'@ID':32,'@CustomerOrderItemID':32,'@Type':'SolarEnergy','@ProductSpecificationID':4,'@ProductSpecificationName':'StarterSolar','@ProvisionStatus':'NotProvisioned','@IsBillingActive':false,'@BillingStartDate':null,'@BillingEndDate':null,'@Recurring':'Rent','@FactoryID':103}]}}]}},'NewCustomerOrder':{'@ID':24,'@BusinessStatus':'New','@PurchaseOrderNumber':'PON_12345678','@PurchaseOrderNumberID':30,'@PurchaseDate':'2018-07-2511: 13: 51','@ResellerUsername':'','@ResellerProfileID':null,'@ResellerUCID':'','@ResellerType':'','@PaymentTerm':1,'@ContractDuration':12,'@SalesAllocation':'Roma','@BillingLocation':'CUSTOMER','@IsCommitment':true,'@PaymentMethod':'Cash','@ProfileID':10013,'@AccountManagerID':1,'@AccountManagerName':'administrator','@SaleCreatorID':1,'@SaleCreatorName':'administrator','@UCID':'9999000009','CustomerOrderItemList':{'CustomerOrderItem':[{'@ID':32,'@CustomerOrderID':24,'@ProductOfferingID':5,'@ProductOfferingName':'StarterSolar','@ProductOfferingFamilyID':5,'@ProductOfferingFamilyName':'Solar','@ProductCatalogID':1,'@ProductCatalogName':'StandardConsumers','@ActivationPrice':'120','@InstallmentPrice':'120','DiscountList':{'Discount':[{'@ID':21,'@CustomerOrderItemID':32,'@AmountInPercent':'95','@Precedence':2,'@DiscountSpecificationID':1,'@DiscountSpecificationName':'FamilyandFriends','@MainCount':null,'@RemainingCount':null,'@IsActive':true,'@StartDate':'2018-07-2511: 14: 24','@EndDate':'2028-07-2511: 14: 24'},{'@ID':23,'@CustomerOrderItemID':32,'@AmountInPercent':'20','@Precedence':2,'@DiscountSpecificationID':3,'@DiscountSpecificationName':'Corporate','@MainCount':null,'@RemainingCount':null,'@IsActive':true,'@StartDate':'2018-07-2511: 14: 24','@EndDate':'2028-07-2511: 14: 24'}]},'ProductList':{'Product':[{'@ID':32,'@CustomerOrderItemID':32,'@Type':'SolarEnergy','@ProductSpecificationID':4,'@ProductSpecificationName':'StarterSolar','@ProvisionStatus':'NotProvisioned','@IsBillingActive':false,'@BillingStartDate':null,'@BillingEndDate':null,'@Recurring':'Rent','@FactoryID':103}]}}]}}}");
        private JObject _Data3 = JObject.Parse(@"{'@Id':0,'@Operation':'CustomerOrderUpdated','@Date':'2018-07-3013: 51: 00','@Reason':'CustomerOrderUpdated','@Source':'Customer Order Updated','@UCID':'9999000009','@ActionByUsername':'admin','@PurchaseOrderNumber':'PON_12345678','@PurchaseOrderNumberID':30,'CustomerProfile':{'@ID':10013,'@Title':'Ms','@BusinessTitle':null,'@UCID':'9999000009','@Username':'User124','@BirthDate':'2018-05-2200: 00: 00','@Gender':'Male','@ProfileType':'Subscriber','@IsCorporate':false,'@CorporateDueDay':null,'@Status':'Active','@Reason':'Active','@GeographicalRegion':'Begam','@OrganizationHierarchy':null,'@CSOOrganizationHierarchy':'Maadi','@Nationality':'Egypt','@MembershipDate':'2018-05-2900: 00: 00','@Comments':'','@Occupation':'Manager','@CompanyActivity':'Communications','@ProfileCreatorID':1,'@NationalID':'','@PassportID':'','NameList':{'Name':[{'@Language':'English','@FirstName':'User','@MiddleName':'2','@LastName':'4'}]},'EmailList':{'Email':[{'@Email':'User124@xyz.com','@EmailType':'Preferred'}]},'TelephoneList':{'Telephone':[{'@TelephoneNo':'0212345678','@TelephoneType':'HomeTelephone'}]},'AddressList':{'Address':[{'@Language':'English','@Address1':'cairo','@Address2':'','@ZipCode':''}]},'ContactList':{'Contact':[]},'ProfileRelationsList':{'ProfileRelation':[{'@RelationType':'hasparent','@ProfileID':10,'@ProfileUCID':'9999000003'}]},'ProfileCategoryList':{'ProfileCategory':[{'@ProfileCategoryName':'BC_Initiative2011'}]}},'OldCustomerOrder':{'@ID':24,'@BusinessStatus':'New','@PurchaseOrderNumber':'PON_12345678','@PurchaseOrderNumberID':30,'@PurchaseDate':'2018-07-2511: 13: 51','@ResellerUsername':'','@ResellerProfileID':null,'@ResellerUCID':'','@ResellerType':'','@PaymentTerm':1,'@ContractDuration':12,'@SalesAllocation':'Roma','@BillingLocation':'CUSTOMER','@IsCommitment':false,'@PaymentMethod':'Cash','@ProfileID':10013,'@AccountManagerID':1,'@AccountManagerName':'administrator','@SaleCreatorID':1,'@SaleCreatorName':'administrator','@UCID':'9999000009','CustomerOrderItemList':{'CustomerOrderItem':[{'@ID':32,'@CustomerOrderID':24,'@ProductOfferingID':5,'@ProductOfferingName':'StarterSolar','@ProductOfferingFamilyID':5,'@ProductOfferingFamilyName':'Solar','@ProductCatalogID':1,'@ProductCatalogName':'StandardConsumers','@ActivationPrice':'120','@InstallmentPrice':'120','DiscountList':{'Discount':[{'@ID':21,'@CustomerOrderItemID':32,'@AmountInPercent':'50','@Precedence':2,'@DiscountSpecificationID':1,'@DiscountSpecificationName':'FamilyandFriends','@MainCount':null,'@RemainingCount':null,'@IsActive':true,'@StartDate':'2018-07-25 11: 14: 24','@EndDate':'2028-07-25 11: 14: 24'},{'@ID':22,'@CustomerOrderItemID':32,'@AmountInPercent':'10','@Precedence':2,'@DiscountSpecificationID':2,'@DiscountSpecificationName':'VIP','@MainCount':null,'@RemainingCount':null,'@IsActive':true,'@StartDate':'2018-07-25 11: 14: 24','@EndDate':'2028-07-25 11: 14: 24'}]},'ProductList':{'Product':[{'@ID':32,'@CustomerOrderItemID':32,'@Type':'SolarEnergy','@ProductSpecificationID':4,'@ProductSpecificationName':'StarterSolar','@ProvisionStatus':'NotProvisioned','@IsBillingActive':false,'@BillingStartDate':null,'@BillingEndDate':null,'@Recurring':'Rent','@FactoryID':103}]}}]}},'NewCustomerOrder':{'@ID':24,'@BusinessStatus':'New','@PurchaseOrderNumber':'PON_12345678','@PurchaseOrderNumberID':30,'@PurchaseDate':'2018-07-2511: 13: 51','@ResellerUsername':'','@ResellerProfileID':null,'@ResellerUCID':'','@ResellerType':'','@PaymentTerm':1,'@ContractDuration':12,'@SalesAllocation':'Roma','@BillingLocation':'CUSTOMER','@IsCommitment':true,'@PaymentMethod':'Cash','@ProfileID':10013,'@AccountManagerID':1,'@AccountManagerName':'administrator','@SaleCreatorID':1,'@SaleCreatorName':'administrator','@UCID':'9999000009','CustomerOrderItemList':{'CustomerOrderItem':[{'@ID':32,'@CustomerOrderID':24,'@ProductOfferingID':5,'@ProductOfferingName':'StarterSolar','@ProductOfferingFamilyID':5,'@ProductOfferingFamilyName':'Solar','@ProductCatalogID':1,'@ProductCatalogName':'StandardConsumers','@ActivationPrice':'120','@InstallmentPrice':'120','DiscountList':{'Discount':[]},'ProductList':{'Product':[{'@ID':32,'@CustomerOrderItemID':32,'@Type':'SolarEnergy','@ProductSpecificationID':4,'@ProductSpecificationName':'StarterSolar','@ProvisionStatus':'NotProvisioned','@IsBillingActive':false,'@BillingStartDate':null,'@BillingEndDate':null,'@Recurring':'Rent','@FactoryID':103}]}}]}}}");

        private List<SimpleTemplate.Business.Model.VariableMap> _ProfileAdded_Mapping = new List<SimpleTemplate.Business.Model.VariableMap>()
            {
                new SimpleTemplate.Business.Model.VariableMap()
                {
                    MappedValue = "Tracer website",
                    Name = "@Source",
                    Value = "Customer Profile Added"
                }
            };

        private List<SimpleTemplate.Business.Model.VariableMap> _ProfileUpdated_Mapping = new List<SimpleTemplate.Business.Model.VariableMap>()
            {
                new SimpleTemplate.Business.Model.VariableMap()
                {
                    MappedValue = "Tracer website",
                    Name = "@Source",
                    Value = "Customer Profile Updated"
                }
            };

        private List<SimpleTemplate.Business.Model.VariableMap> _OrderAdded_Mapping = new List<SimpleTemplate.Business.Model.VariableMap>()
            {
                new SimpleTemplate.Business.Model.VariableMap()
                {
                    MappedValue = "Tracer website",
                    Name = "@Source",
                    Value = "Customer Order Added"
                }
            };

        private List<SimpleTemplate.Business.Model.VariableMap> _OrderUpdated_Mapping = new List<SimpleTemplate.Business.Model.VariableMap>()
            {
                new SimpleTemplate.Business.Model.VariableMap()
                {
                    MappedValue = "Tracer website",
                    Name = "@Source",
                    Value = "Customer Order Updated"
                }
            };

        private List<SimpleTemplate.Business.Model.VariableMap> _Empty_Mapping = new List<SimpleTemplate.Business.Model.VariableMap>();
        
        private string _ProfileAdded_Template = "{{@ActionByUsername}} created new profile for {{CustomerProfile.@Username}} through \"{{$Map$@Source}}\"";

        private string _ProfileUpdated_Template = "{{@ActionByUsername}} modified the profile of {{OldCustomerProfile.@Username}} through \"{{$Map$@Source}}\". The following are the list of the changes:\r\n{{$Compare$OldCustomerProfile,NewCustomerProfile}}";

        private string _OrderUpdated_Template = "{{@ActionByUsername}} modified the sale with sale order number {{OldCustomerOrder.@PurchaseOrderNumber}} through \"{{$Map$@Source}}\". The following are the list of the changes:\r\n{{$Compare$OldCustomerOrder,NewCustomerOrder}}";

        private string _DiscountRemoved_Template = "{{@ActionByUsername}} removed the discount {{Discount.@DiscountSpecificationName}} with {{Discount.@AmountInPercent}} % from the product offering {{CustomerOrderItem.@ProductOfferingName}}.";

        private string _DiscountUpdated_Template = "{{@ActionByUsername}} updated the discount of {{NewDiscount.@DiscountSpecificationName}} on the product offering {{CustomerOrderItem.@ProductOfferingName}}. The following are the list of the changes:\r\n{{$Compare$OldDiscount,NewDiscount}}";

        private string _DiscountAdded_Template = "{{@ActionByUsername}} added the discount {{Discount.@DiscountSpecificationName}} with {{Discount.@AmountInPercent}} % on the product offering {{CustomerOrderItem.@ProductOfferingName}}";

        private string _OrderAdded_Template = "{{@ActionByUsername}} created new sale for {{CustomerProfile.@Username}} with sale order number {{@PurchaseOrderNumber}} through \"{{$Map$@Source}}\".";
        #endregion

        [TestMethod]
        public void TestNoFunction()
        {
            string template = "An event of {{Operation}} submitted.";
            
            string expected = "An event of store changed submitted.";

            SimpleTemplate.Business.TemplateProcesser processer = new SimpleTemplate.Business.TemplateProcesser(template, _Data);

            Assert.AreEqual(expected, processer.Result);
        }

        [TestMethod]
        public void TestMapFunction()
        {
            string template = "An event of {{$Map$Operation}} submitted.";
            List<SimpleTemplate.Business.Model.VariableMap> mapping = new List<SimpleTemplate.Business.Model.VariableMap>()
            {
                new SimpleTemplate.Business.Model.VariableMap()
                {
                    MappedValue = "store modified",
                    Name = "Operation",
                    Value = "store changed"
                }
            };

            string expected = "An event of store modified submitted.";

            SimpleTemplate.Business.TemplateProcesser processer = new SimpleTemplate.Business.TemplateProcesser(template, _Data, mapping);

            Assert.AreEqual(expected, processer.Result);
        }

        [TestMethod]
        public void TestCompareFunction1()
        {
            string template = "{{@ActionByUsername}} modified the sale with sale order number {{OldCustomerOrder.@PurchaseOrderNumber}} through \"{{$Map$@Source}}\". The following are the list of the changes:\r\n{{$Compare$OldCustomerOrder,NewCustomerOrder}}";

            string expected = "admin modified the sale with sale order number PON_12345678 through \"Tracer website\". The following are the list of the changes:\r\n\r\n1. \"is commitment\" changed from False to True\r\n2. Discount modified \"amount in percent\" from 50 to 95\r\n3. Discount removed with the criteria: [ID is 22, \"amount in percent\" is 10, discount specification ID is 2, discount specification name is VIP]\r\n4. Discount added with the criteria: [ID is 23, \"amount in percent\" is 20, discount specification ID is 3, discount specification name is Corporate]\r\n\r\n";

            SimpleTemplate.Business.TemplateProcesser processer = new SimpleTemplate.Business.TemplateProcesser(template, _Data2, _OrderUpdated_Mapping);

            Assert.AreEqual(expected, processer.Result);
        }

        [TestMethod]
        public void TestCompareFunction2()
        {
            string template = "{{@ActionByUsername}} modified the sale with sale order number {{OldCustomerOrder.@PurchaseOrderNumber}} through \"{{$Map$@Source}}\". The following are the list of the changes:\r\n{{$Compare$OldCustomerOrder,NewCustomerOrder}}";

            string expected = "admin modified the sale with sale order number PON_12345678 through \"Tracer website\". The following are the list of the changes:\r\n\r\n1. \"is commitment\" changed from False to True\r\n2. Discount removed with the criteria: [ID is 21, customer order item ID is 32, \"amount in percent\" is 50, precedence is 2, discount specification ID is 1, discount specification name is FamilyandFriends, no main count, no remaining count, \"is active\" is True, start date is Wed, 25 Jul, 2018 11:14 AM, end date is Tue, 25 Jul, 2028 11:14 AM]\r\n3. Discount removed with the criteria: [ID is 22, customer order item ID is 32, \"amount in percent\" is 10, precedence is 2, discount specification ID is 2, discount specification name is VIP, no main count, no remaining count, \"is active\" is True, start date is Wed, 25 Jul, 2018 11:14 AM, end date is Tue, 25 Jul, 2028 11:14 AM]\r\n\r\n";

            SimpleTemplate.Business.TemplateProcesser processer = new SimpleTemplate.Business.TemplateProcesser(template, _Data3, _OrderUpdated_Mapping);

            Assert.AreEqual(expected, processer.Result);
        }

        [TestMethod]
        public void TestWholeEvent1()
        {
            string template = "{{@ActionByUsername}} modified the profile of {{OldCustomerProfile.@Username}} through \"{{$Map$@Source}}\". The following are the list of the changes:\r\n{{$Compare$OldCustomerProfile,NewCustomerProfile}}";

            JObject data = JObject.Parse(@"{    '@Id': 0,    '@Operation': 'Customer Profile Updated',    '@Date': '2018-08-26 14:21:19',    '@Reason': 'Customer Profile Updated',    '@Source': 'Customer Profile Updated',    '@UCID': '1234567890',    '@ActionById': 10034,    '@ActionByUsername': 'youssef.sarhan',    '@ProfileID': 10051,    'OldCustomerProfile': {      '@ID': 10051,      '@Title': 'Mr',      '@BusinessTitle': null,      '@UCID': '1234567890',      '@Username': 'KamalRamses',      '@BirthDate': '1982-01-14 00:00:00',      '@Gender': 'Male',      '@ProfileType': 'Subscriber',      '@IsCorporate': false,      '@CorporateDueDay': null,      '@Status': 'Future',      '@Reason': 'Active',      '@GeographicalRegion': 'Heliopolis',      '@OrganizationHierarchy': null,      '@CSOOrganizationHierarchy': 'Maadi',      '@Nationality': 'Egypt',      '@MembershipDate': '2018-08-26 00:00:00',      '@Comments': '',      '@Occupation': 'Manager',      '@CompanyActivity': 'Facebook',      '@ProfileCreatorID': 10034,      '@NationalID': '',      '@PassportID': '',      'NameList': {        'Name': [          {            '@Language': 'English',            '@FirstName': 'Kamal',            '@MiddleName': '',            '@LastName': 'Ramses'          }        ]      },      'EmailList': {        'Email': [          {            '@Email': 'kamal.ramses@hotmail.com',            '@EmailType': 'Preferred'          }        ]      },      'TelephoneList': {        'Telephone': [          {            '@TelephoneNo': '0233474848',            '@TelephoneType': 'Home Telephone'          },          {            '@TelephoneNo': '01222344058',            '@TelephoneType': 'Mobile Telephone'          }        ]      },      'AddressList': {        'Address': [          {            '@Language': 'English',            '@Address1': '7 Horya Street',            '@Address2': ' ',            '@ZipCode': ''          }        ]      },      'ContactList': {        'Contact': []      },      'ProfileRelationsList': null,      'ProfileCategoryList': {        'ProfileCategory': [          {            '@ProfileCategoryName': 'Standard'          }        ]      }    },    'NewCustomerProfile': {      '@ID': 10051,      '@Title': 'Mr',      '@BusinessTitle': null,      '@UCID': '1234567890',      '@Username': 'KamalRamses',      '@BirthDate': '1982-01-14 00:00:00',      '@Gender': 'Male',      '@ProfileType': 'Subscriber',      '@IsCorporate': false,      '@CorporateDueDay': null,      '@Status': 'Future',      '@Reason': 'Active',      '@GeographicalRegion': 'Heliopolis',      '@OrganizationHierarchy': null,      '@CSOOrganizationHierarchy': 'Maadi',      '@Nationality': 'Egypt',      '@MembershipDate': '2018-08-26 00:00:00',      '@Comments': '',      '@Occupation': 'Manager',      '@CompanyActivity': 'Facebook',      '@ProfileCreatorID': 10034,      '@NationalID': '',      '@PassportID': '',      '@ActionById': 10034,      '@ActionByUsername': 'youssef.sarhan',      'NameList': {        'Name': [          {            '@Language': 'English',            '@FirstName': 'Kamal',            '@MiddleName': '',            '@LastName': 'Ramses'          }        ]      },      'EmailList': {        'Email': [          {            '@Email': 'kamal.ramses@hotmail.com',            '@EmailType': 'Preferred'          }        ]      },      'TelephoneList': {        'Telephone': [          {            '@TelephoneNo': '0233474848',            '@TelephoneType': 'Home Telephone'          },          {            '@TelephoneNo': '01222344058',            '@TelephoneType': 'Mobile Telephone'          }        ]      },      'AddressList': {        'Address': [          {            '@Language': 'English',            '@Address1': '82 horya st',            '@Address2': ' ',            '@ZipCode': ''          }        ]      },      'ContactList': {        'Contact': []      },      'ProfileRelationsList': null,      'ProfileCategoryList': {        'ProfileCategory': [          {            '@ProfileCategoryName': 'Standard'          }        ]      }    }  }");
            string expected = "youssef.sarhan modified the profile of KamalRamses through \"Tracer website\". The following are the list of the changes:\r\n\r\n1. Address modified address1 from 7 Horya Street to 82 horya st\r\n2. New action by id added with 10034\r\n3. New action by username added with youssef.sarhan\r\n\r\n";

             SimpleTemplate.Business.TemplateProcesser processer = new SimpleTemplate.Business.TemplateProcesser(template, data, _ProfileUpdated_Mapping);

            Assert.AreEqual(expected, processer.Result);
        }

        [TestMethod]
        public void TestWholeEvent2()
        {
            string template = "{{@ActionByUsername}} created new profile for {{CustomerProfile.@Username}} through \"{{$Map$@Source}}\"";

            JObject data = JObject.Parse(@"{    '@Id': 0,    '@ProfileID': 10051,    '@Operation': 'Customer Profile Added',    '@Date': '2018-08-26 14:19:28',    '@Reason': 'Profile Added',    '@Source': 'Customer Profile Added',    '@UCID': '1234567890',    '@ActionById': 10034,    '@ActionByUsername': 'youssef.sarhan',    'CustomerProfile': {      '@ID': 10051,      '@Title': 'Mr',      '@BusinessTitle': null,      '@UCID': '1234567890',      '@Username': 'KamalRamses',      '@BirthDate': '1982-01-14 00:00:00',      '@Gender': 'Male',      '@ProfileType': 'Subscriber',      '@IsCorporate': false,      '@CorporateDueDay': null,      '@Status': 'Future',      '@Reason': 'Active',      '@GeographicalRegion': 'Heliopolis',      '@OrganizationHierarchy': null,      '@CSOOrganizationHierarchy': 'Maadi',      '@Nationality': 'Egypt',      '@MembershipDate': '2018-08-26 00:00:00',      '@Comments': '',      '@Occupation': 'Manager',      '@CompanyActivity': 'Facebook',      '@ProfileCreatorID': 10034,      '@NationalID': '',      '@PassportID': '',      '@ActionById': 10034,      '@ActionByUsername': 'youssef.sarhan',      'NameList': {        'Name': [          {            '@Language': 'English',            '@FirstName': 'Kamal',            '@MiddleName': '',            '@LastName': 'Ramses'          }        ]      },      'EmailList': {        'Email': [          {            '@Email': 'kamal.ramses@hotmail.com',            '@EmailType': 'Preferred'          }        ]      },      'TelephoneList': {        'Telephone': [          {            '@TelephoneNo': '0233474848',            '@TelephoneType': 'Home Telephone'          },          {            '@TelephoneNo': '01222344058',            '@TelephoneType': 'Mobile Telephone'          }        ]      },      'AddressList': {        'Address': [          {            '@Language': 'English',            '@Address1': '7 Horya Street',            '@Address2': ' ',            '@ZipCode': ''          }        ]      },      'ContactList': {        'Contact': []      },      'ProfileRelationsList': null,      'ProfileCategoryList': {        'ProfileCategory': [          {            '@ProfileCategoryName': 'Standard'          }        ]      }    }  }");
            string expected = "youssef.sarhan created new profile for KamalRamses through \"Tracer website\"";

             SimpleTemplate.Business.TemplateProcesser processer = new SimpleTemplate.Business.TemplateProcesser(template, data, _ProfileAdded_Mapping);

            Assert.AreEqual(expected, processer.Result);
        }

        [TestMethod]
        public void TestWholeEvent3()
        {
            string template = "{{@ActionByUsername}} modified the sale with sale order number {{OldCustomerOrder.@PurchaseOrderNumber}} through \"{{$Map$@Source}}\". The following are the list of the changes:\r\n{{$Compare$OldCustomerOrder,NewCustomerOrder}}";

            JObject data = JObject.Parse(@"{    '@Id': 0,    '@Operation': 'Customer Order Updated',    '@Date': '2018-08-19 10:11:52',    '@Reason': 'Customer Order Updated',    '@Source': 'Customer Order Updated',    '@UCID': '9999000009',    '@ActionById': 1,    '@ActionByUsername': 'administrator',    '@PurchaseOrderNumber': '24/06/2020_TstSale',    '@PurchaseOrderNumberID': 61,    'CustomerProfile': {      '@ID': 10013,      '@Title': 'Ms',      '@BusinessTitle': null,      '@UCID': '9999000009',      '@Username': 'User124',      '@BirthDate': '2018-05-22 00:00:00',      '@Gender': 'Female',      '@ProfileType': 'Subscriber',      '@IsCorporate': false,      '@CorporateDueDay': null,      '@Status': 'Active',      '@Reason': 'Active',      '@GeographicalRegion': 'Basateen',      '@OrganizationHierarchy': null,      '@CSOOrganizationHierarchy': 'Maadi',      '@Nationality': 'Egypt',      '@MembershipDate': '2018-05-29 00:00:00',      '@Comments': '',      '@Occupation': 'Manager',      '@CompanyActivity': 'Facebook',      '@ProfileCreatorID': 10034,      '@NationalID': '',      '@PassportID': '',      '@ActionById': 10034,      '@ActionByUsername': 'youssef.sarhan',      'NameList': {        'Name': [          {            '@Language': 'English',            '@FirstName': 'User',            '@MiddleName': '2',            '@LastName': '4'          }        ]      },      'EmailList': {        'Email': [          {            '@Email': 'User124@xyz.com',            '@EmailType': 'Preferred'          }        ]      },      'TelephoneList': {        'Telephone': [          {            '@TelephoneNo': '0212345678',            '@TelephoneType': 'Home Telephone'          }        ]      },      'AddressList': {        'Address': [          {            '@Language': 'English',            '@Address1': 'cairo',            '@Address2': ' ',            '@ZipCode': ''          }        ]      },      'ContactList': {        'Contact': []      },      'ProfileRelationsList': {        'ProfileRelation': [          {            '@RelationType': 'has parent',            '@ProfileID': 10,            '@ProfileUCID': '9999000003'          }        ]      },      'ProfileCategoryList': {        'ProfileCategory': [          {            '@ProfileCategoryName': 'VIP'          }        ]      }    },    'OldCustomerOrder': {      '@ID': 54,      '@BusinessStatus': 'New',      '@PurchaseOrderNumber': '24/06/2020_TstSale',      '@PurchaseOrderNumberID': 61,      '@PurchaseDate': '2018-08-13 07:04:40',      '@ResellerUsername': '',      '@ResellerProfileID': null,      '@ResellerUCID': '',      '@ResellerType': '',      '@PaymentTerm': 1,      '@ContractDuration': 12,      '@SalesAllocation': 'Roma',      '@BillingLocation': 'CUSTOMER',      '@IsCommitment': false,      '@PaymentMethod': 'Cash',      '@ProfileID': 10013,      '@AccountManagerID': 1,      '@AccountManagerName': 'administrator',      '@SaleCreatorID': 10034,      '@SaleCreatorName': 'youssef.sarhan',      '@UCID': '9999000009',      '@ActionById': 10034,      '@ActionByUsername': 'youssef.sarhan',      'CustomerOrderItemList': {        'CustomerOrderItem': [          {            '@ID': 71,            '@CustomerOrderID': 54,            '@ProductOfferingID': 10,            '@ProductOfferingName': 'ABB 5.8',            '@ProductOfferingFamilyID': 6,            '@ProductOfferingFamilyName': 'Inverter',            '@ProductCatalogID': 1,            '@ProductCatalogName': 'Standard Consumers',            '@ActivationPrice': '27300',            '@InstallmentPrice': '0',            'DiscountList': {              'Discount': [                {                  '@ID': 39,                  '@CustomerOrderItemID': 71,                  '@AmountInPercent': '20',                  '@Precedence': 2,                  '@DiscountSpecificationID': 2,                  '@DiscountSpecificationName': 'Compound',                  '@MainCount': null,                  '@RemainingCount': null,                  '@IsActive': true,                  '@StartDate': '2018-08-13 07:04:49',                  '@EndDate': '2028-08-13 07:04:49',                  '@ActionById': 10034,                  '@ActionByUsername': 'youssef.sarhan'                },                {                  '@ID': 40,                  '@CustomerOrderItemID': 71,                  '@AmountInPercent': '50',                  '@Precedence': 2,                  '@DiscountSpecificationID': 3,                  '@DiscountSpecificationName': 'Corporate',                  '@MainCount': null,                  '@RemainingCount': null,                  '@IsActive': true,                  '@StartDate': '2018-08-13 08:48:19',                  '@EndDate': '2028-08-13 08:48:19',                  '@ActionById': 10034,                  '@ActionByUsername': 'youssef.sarhan'                }              ]            },            'ProductList': {              'Product': [                {                  'DynamicData': {                    'PhysicalResource_SID': '240',                    'PhysicalResource_Serial': '12345'                  },                  'DynamicProductData': {},                  'DynamicServiceData': {},                  'DynamicPhysicalResourceData': {                    'SID': '240',                    'Serial': '12345'                  },                  'DynamicLogicalResourceData': {},                  '@ID': 289,                  '@CustomerOrderItemID': 71,                  '@Type': 'Inverter',                  '@ProductSpecificationID': 9,                  '@ProductSpecificationName': 'ABB 5.8',                  '@ProvisionStatus': 'NotProvisioned',                  '@IsBillingActive': false,                  '@BillingStartDate': null,                  '@BillingEndDate': null,                  '@Recurring': 'Sold',                  '@FactoryID': 106                }              ]            }          }        ]      }    },    'NewCustomerOrder': {      '@ID': 54,      '@BusinessStatus': 'New',      '@PurchaseOrderNumber': '24/06/2020_TstSale',      '@PurchaseOrderNumberID': 61,      '@PurchaseDate': '2018-08-13 07:04:40',      '@ResellerUsername': '',      '@ResellerProfileID': null,      '@ResellerUCID': '',      '@ResellerType': '',      '@PaymentTerm': 1,      '@ContractDuration': 12,      '@SalesAllocation': 'Roma',      '@BillingLocation': 'CUSTOMER',      '@IsCommitment': false,      '@PaymentMethod': 'Cash',      '@ProfileID': 10013,      '@AccountManagerID': 1,      '@AccountManagerName': 'administrator',      '@SaleCreatorID': 10034,      '@SaleCreatorName': 'youssef.sarhan',      '@UCID': '9999000009',      '@ActionById': 1,      '@ActionByUsername': 'administrator',      'CustomerOrderItemList': {        'CustomerOrderItem': [          {            '@ID': 71,            '@CustomerOrderID': 54,            '@ProductOfferingID': 10,            '@ProductOfferingName': 'ABB 5.8',            '@ProductOfferingFamilyID': 6,            '@ProductOfferingFamilyName': 'Inverter',            '@ProductCatalogID': 1,            '@ProductCatalogName': 'Standard Consumers',            '@ActivationPrice': '27300',            '@InstallmentPrice': '0',            'DiscountList': {              'Discount': [                {                  '@ID': 39,                  '@CustomerOrderItemID': 71,                  '@AmountInPercent': '20',                  '@Precedence': 2,                  '@DiscountSpecificationID': 2,                  '@DiscountSpecificationName': 'Compound',                  '@MainCount': null,                  '@RemainingCount': null,                  '@IsActive': true,                  '@StartDate': '2018-08-13 07:04:49',                  '@EndDate': '2028-08-13 07:04:49',                  '@ActionById': 1,                  '@ActionByUsername': 'administrator'                },                {                  '@ID': 40,                  '@CustomerOrderItemID': 71,                  '@AmountInPercent': '50',                  '@Precedence': 2,                  '@DiscountSpecificationID': 3,                  '@DiscountSpecificationName': 'Corporate',                  '@MainCount': null,                  '@RemainingCount': null,                  '@IsActive': true,                  '@StartDate': '2018-08-13 08:48:19',                  '@EndDate': '2028-08-13 08:48:19',                  '@ActionById': 1,                  '@ActionByUsername': 'administrator'                }              ]            },            'ProductList': {              'Product': [                {                  'DynamicData': {                    'PhysicalResource_SID': '240',                    'PhysicalResource_Serial': '12345'                  },                  'DynamicProductData': {},                  'DynamicServiceData': {},                  'DynamicPhysicalResourceData': {                    'SID': '240',                    'Serial': '12345'                  },                  'DynamicLogicalResourceData': {},                  '@ID': 289,                  '@CustomerOrderItemID': 71,                  '@Type': 'Inverter',                  '@ProductSpecificationID': 9,                  '@ProductSpecificationName': 'ABB 5.8',                  '@ProvisionStatus': 'NotProvisioned',                  '@IsBillingActive': false,                  '@BillingStartDate': null,                  '@BillingEndDate': null,                  '@Recurring': 'Sold',                  '@FactoryID': 106                }              ]            }          }        ]      }    }  }");
            string expected = "administrator modified the sale with sale order number 24/06/2020_TstSale through \"Tracer website\". The following are the list of the changes:\r\n\r\n1. Action by id changed from 10034 to 1\r\n2. Action by username changed from youssef.sarhan to administrator\r\n3. Discount modified action by id from 10034 to 1\r\n4. Discount modified action by username from youssef.sarhan to administrator\r\n5. Discount modified action by id from 10034 to 1\r\n6. Discount modified action by username from youssef.sarhan to administrator\r\n\r\n";

             SimpleTemplate.Business.TemplateProcesser processer = new SimpleTemplate.Business.TemplateProcesser(template, data, _OrderUpdated_Mapping);

            Assert.AreEqual(expected, processer.Result);
        }

        [TestMethod]
        public void TestWholeEvent4()
        {
            JObject data = JObject.Parse(@"{    '@Id': 0,    '@Operation': 'Customer Profile Updated',    '@Date': '2018-08-19 07:42:57',    '@Reason': 'Customer Profile Updated',    '@Source': 'Customer Profile Updated',    '@UCID': '9999555523',    '@ProfileID': 10030,    'OldCustomerProfile': {      '@ID': 10030,      '@Title': 'Dr',      '@BusinessTitle': null,      '@UCID': '9999555523',      '@Username': 'User5599',      '@BirthDate': '1988-08-16 00:00:00',      '@Gender': 'Male',      '@ProfileType': 'Subscriber',      '@IsCorporate': false,      '@CorporateDueDay': null,      '@Status': 'Active',      '@Reason': 'Active',      '@GeographicalRegion': '15th of May City',      '@OrganizationHierarchy': null,      '@CSOOrganizationHierarchy': 'Maadi',      '@Nationality': 'Egypt',      '@MembershipDate': '2018-08-05 00:00:00',      '@Comments': '',      '@Occupation': 'Manager',      '@CompanyActivity': 'Facebook',      '@ProfileCreatorID': 1,      '@NationalID': '',      '@PassportID': '',      'NameList': {        'Name': [          {            '@Language': 'English',            '@FirstName': 'User',            '@MiddleName': '99',            '@LastName': '12'          }        ]      },      'EmailList': {        'Email': [          {            '@Email': 'User5599@mail.com',            '@EmailType': 'Preferred'          }        ]      },      'TelephoneList': {        'Telephone': [          {            '@TelephoneNo': '0212345678',            '@TelephoneType': 'Home Telephone'          }        ]      },      'AddressList': {        'Address': [          {            '@Language': 'English',            '@Address1': 'cairo',            '@Address2': ' ',            '@ZipCode': ''          }        ]      },      'ContactList': {        'Contact': []      },      'ProfileRelationsList': {        'ProfileRelation': [          {            '@RelationType': 'has parent',            '@ProfileID': 10016,            '@ProfileUCID': '9999000012'          }        ]      },      'ProfileCategoryList': {        'ProfileCategory': [          {            '@ProfileCategoryName': 'Standard'          }        ]      }    },    'NewCustomerProfile': {      '@ID': 10030,      '@Title': 'Dr',      '@BusinessTitle': null,      '@UCID': '9999555523',      '@Username': 'User5599',      '@BirthDate': '1988-08-16 00:00:00',      '@Gender': 'Male',      '@ProfileType': 'Subscriber',      '@IsCorporate': false,      '@CorporateDueDay': null,      '@Status': 'Deleted',      '@Reason': 'Active',      '@GeographicalRegion': '15th of May City',      '@OrganizationHierarchy': null,      '@CSOOrganizationHierarchy': 'Maadi',      '@Nationality': 'Egypt',      '@MembershipDate': '2018-08-05 00:00:00',      '@Comments': '',      '@Occupation': 'Manager',      '@CompanyActivity': 'Google',      '@ProfileCreatorID': 1,      '@NationalID': '',      '@PassportID': '',      'NameList': {        'Name': [          {            '@Language': 'English',            '@FirstName': 'User',            '@MiddleName': '99',            '@LastName': '12'          }        ]      },      'EmailList': {        'Email': [          {            '@Email': 'User5599@mail.com',            '@EmailType': 'Preferred'          }        ]      },      'TelephoneList': {        'Telephone': [          {            '@TelephoneNo': '0212345678',            '@TelephoneType': 'Home Telephone'          }        ]      },      'AddressList': {        'Address': [          {            '@Language': 'English',            '@Address1': 'cairo',            '@Address2': ' ',            '@ZipCode': ''          }        ]      },      'ContactList': {        'Contact': []      },      'ProfileRelationsList': {        'ProfileRelation': [          {            '@RelationType': 'has parent',            '@ProfileID': 10016,            '@ProfileUCID': '9999000012'          }        ]      },      'ProfileCategoryList': {        'ProfileCategory': [          {            '@ProfileCategoryName': 'Standard'          }        ]      }    }  }");
            string expected = "@ActionByUsername modified the profile of User5599 through \"Tracer website\". The following are the list of the changes:\r\n\r\n1. Status changed from Active to Deleted\r\n2. Company activity changed from Facebook to Google\r\n\r\n";

             SimpleTemplate.Business.TemplateProcesser processer = new SimpleTemplate.Business.TemplateProcesser(_ProfileUpdated_Template, data, _ProfileUpdated_Mapping);

            Assert.AreEqual(expected, processer.Result);
        }

        [TestMethod]
        public void TestWholeEvent5()
        {
            JObject data = JObject.Parse(@"{    '@Id': 0,    '@Operation': 'Customer Profile Updated',    '@Date': '2018-08-19 07:40:23',    '@Reason': 'Customer Profile Updated',    '@Source': 'Customer Profile Updated',    '@UCID': '9999000012',    '@ProfileID': 10016,    'OldCustomerProfile': {      '@ID': 10016,      '@Title': 'Mr',      '@BusinessTitle': null,      '@UCID': '9999000012',      '@Username': 'User1266',      '@BirthDate': null,      '@Gender': 'Male',      '@ProfileType': 'Customer',      '@IsCorporate': false,      '@CorporateDueDay': null,      '@Status': 'Active',      '@Reason': 'Active',      '@GeographicalRegion': 'Begam',      '@OrganizationHierarchy': null,      '@CSOOrganizationHierarchy': 'Maadi',      '@Nationality': 'Egypt',      '@MembershipDate': '2018-05-29 00:00:00',      '@Comments': '',      '@Occupation': 'Manager',      '@CompanyActivity': 'Facebook',      '@ProfileCreatorID': 1,      '@NationalID': '',      '@PassportID': '',      'NameList': {        'Name': [          {            '@Language': 'English',            '@FirstName': 'User',            '@MiddleName': '1',            '@LastName': '66'          }        ]      },      'EmailList': {        'Email': [          {            '@Email': 'User122@xyz.com',            '@EmailType': 'Preferred'          }        ]      },      'TelephoneList': {        'Telephone': [          {            '@TelephoneNo': '0212345678',            '@TelephoneType': 'Home Telephone'          }        ]      },      'AddressList': {        'Address': [          {            '@Language': 'English',            '@Address1': 'cairo',            '@Address2': ' ',            '@ZipCode': ''          }        ]      },      'ContactList': {        'Contact': []      },      'ProfileRelationsList': null,      'ProfileCategoryList': {        'ProfileCategory': [          {            '@ProfileCategoryName': 'VIP'          }        ]      }    },    'NewCustomerProfile': {      '@ID': 10016,      '@Title': 'Mr',      '@BusinessTitle': null,      '@UCID': '9999000012',      '@Username': 'User1266',      '@BirthDate': '2018-08-13 00:00:00',      '@Gender': 'Male',      '@ProfileType': 'Customer',      '@IsCorporate': false,      '@CorporateDueDay': null,      '@Status': 'Active',      '@Reason': 'Active',      '@GeographicalRegion': 'Begam',      '@OrganizationHierarchy': null,      '@CSOOrganizationHierarchy': 'Maadi',      '@Nationality': 'Egypt',      '@MembershipDate': '2018-05-29 00:00:00',      '@Comments': '',      '@Occupation': 'Manager',      '@CompanyActivity': 'Marketing',      '@ProfileCreatorID': 1,      '@NationalID': '',      '@PassportID': '',      'NameList': {        'Name': [          {            '@Language': 'English',            '@FirstName': 'User',            '@MiddleName': '1',            '@LastName': '66'          }        ]      },      'EmailList': {        'Email': [          {            '@Email': 'User122@xyz.com',            '@EmailType': 'Preferred'          }        ]      },      'TelephoneList': {        'Telephone': [          {            '@TelephoneNo': '0212345678',            '@TelephoneType': 'Home Telephone'          }        ]      },      'AddressList': {        'Address': [          {            '@Language': 'English',            '@Address1': 'cairo',            '@Address2': ' ',            '@ZipCode': ''          }        ]      },      'ContactList': {        'Contact': []      },      'ProfileRelationsList': null,      'ProfileCategoryList': {        'ProfileCategory': [          {            '@ProfileCategoryName': 'VIP'          }        ]      }    }  }");
            string expected = "@ActionByUsername modified the profile of User1266 through \"Tracer website\". The following are the list of the changes:\r\n\r\n1. Birth date changed from  to 2018-08-13 00:00:00\r\n2. Company activity changed from Facebook to Marketing\r\n\r\n";

             SimpleTemplate.Business.TemplateProcesser processer = new SimpleTemplate.Business.TemplateProcesser(_ProfileUpdated_Template, data, _ProfileUpdated_Mapping);

            Assert.AreEqual(expected, processer.Result);
        }

        [TestMethod]
        public void TestWholeEvent6()
        {
            JObject data = JObject.Parse(@"{    '@Id': 0,    '@Operation': 'Customer Order Updated',    '@Date': '2018-08-16 17:15:35',    '@Reason': 'Customer Order Updated',    '@Source': 'Customer Order Updated',    '@UCID': '0055000000',    '@ActionById': 10035,    '@ActionByUsername': 'amr.adel',    '@PurchaseOrderNumber': '000000000019',    '@PurchaseOrderNumberID': 65,    'CustomerProfile': {      '@ID': 10050,      '@Title': 'Dr',      '@BusinessTitle': null,      '@UCID': '0055000000',      '@Username': 'fire.bird',      '@BirthDate': '2018-08-15 00:00:00',      '@Gender': 'Male',      '@ProfileType': 'Subscriber',      '@IsCorporate': false,      '@CorporateDueDay': null,      '@Status': 'Active',      '@Reason': 'Active',      '@GeographicalRegion': 'Badr City',      '@OrganizationHierarchy': null,      '@CSOOrganizationHierarchy': 'Maadi',      '@Nationality': 'Egypt',      '@MembershipDate': '2018-08-16 00:00:00',      '@Comments': '',      '@Occupation': 'Manager',      '@CompanyActivity': 'Facebook',      '@ProfileCreatorID': 10035,      '@NationalID': '',      '@PassportID': '',      '@ActionById': 10035,      '@ActionByUsername': 'amr.adel',      'NameList': {        'Name': [          {            '@Language': 'English',            '@FirstName': 'fire',            '@MiddleName': '',            '@LastName': 'bird'          }        ]      },      'EmailList': {        'Email': [          {            '@Email': 'fire.bird@mail.net',            '@EmailType': 'Preferred'          }        ]      },      'TelephoneList': {        'Telephone': [          {            '@TelephoneNo': '0223323423',            '@TelephoneType': 'Home Telephone'          }        ]      },      'AddressList': {        'Address': [          {            '@Language': 'English',            '@Address1': 'test address2',            '@Address2': ' ',            '@ZipCode': ''          }        ]      },      'ContactList': {        'Contact': []      },      'ProfileRelationsList': null,      'ProfileCategoryList': {        'ProfileCategory': [          {            '@ProfileCategoryName': 'Standard'          }        ]      }    },    'OldCustomerOrder': {      '@ID': 59,      '@BusinessStatus': 'New',      '@PurchaseOrderNumber': '000000000019',      '@PurchaseOrderNumberID': 65,      '@PurchaseDate': '2018-08-16 14:53:54',      '@ResellerUsername': '',      '@ResellerProfileID': null,      '@ResellerUCID': '',      '@ResellerType': '',      '@PaymentTerm': 3,      '@ContractDuration': 12,      '@SalesAllocation': 'Roma',      '@BillingLocation': 'CUSTOMER',      '@IsCommitment': false,      '@PaymentMethod': 'Cash',      '@ProfileID': 10050,      '@AccountManagerID': 6,      '@AccountManagerName': 'UpdateProfile',      '@SaleCreatorID': 10035,      '@SaleCreatorName': 'amr.adel',      '@UCID': '0055000000',      '@ActionById': 1,      '@ActionByUsername': 'administrator',      'CustomerOrderItemList': {        'CustomerOrderItem': [          {            '@ID': 76,            '@CustomerOrderID': 59,            '@ProductOfferingID': 8,            '@ProductOfferingName': 'Net-Meter - Basic',            '@ProductOfferingFamilyID': 10,            '@ProductOfferingFamilyName': 'Net-Meter',            '@ProductCatalogID': 1,            '@ProductCatalogName': 'Standard Consumers',            '@ActivationPrice': '4000',            '@InstallmentPrice': '0',            'DiscountList': {              'Discount': [                {                  '@ID': 48,                  '@CustomerOrderItemID': 76,                  '@AmountInPercent': '10',                  '@Precedence': 2,                  '@DiscountSpecificationID': 2,                  '@DiscountSpecificationName': 'Compound',                  '@MainCount': null,                  '@RemainingCount': null,                  '@IsActive': true,                  '@StartDate': '2018-08-16 17:03:50',                  '@EndDate': '2028-08-16 17:03:50',                  '@ActionById': 1,                  '@ActionByUsername': 'administrator'                }              ]            },            'ProductList': {              'Product': [                {                  'DynamicData': {                    'PhysicalResource_SID': '246',                    'PhysicalResource_Serial': ''                  },                  'DynamicProductData': {},                  'DynamicServiceData': {},                  'DynamicPhysicalResourceData': {                    'SID': '246',                    'Serial': ''                  },                  'DynamicLogicalResourceData': {},                  '@ID': 298,                  '@CustomerOrderItemID': 76,                  '@Type': 'NetMeter',                  '@ProductSpecificationID': 7,                  '@ProductSpecificationName': 'Net-Meter - Basic',                  '@ProvisionStatus': 'NotProvisioned',                  '@IsBillingActive': false,                  '@BillingStartDate': null,                  '@BillingEndDate': null,                  '@Recurring': 'Sold',                  '@FactoryID': 111                }              ]            }          }        ]      }    },    'NewCustomerOrder': {      '@ID': 59,      '@BusinessStatus': 'New',      '@PurchaseOrderNumber': '000000000019',      '@PurchaseOrderNumberID': 65,      '@PurchaseDate': '2018-08-16 14:53:54',      '@ResellerUsername': '',      '@ResellerProfileID': null,      '@ResellerUCID': '',      '@ResellerType': '',      '@PaymentTerm': 3,      '@ContractDuration': 12,      '@SalesAllocation': 'Roma',      '@BillingLocation': 'CUSTOMER',      '@IsCommitment': false,      '@PaymentMethod': 'Cash',      '@ProfileID': 10050,      '@AccountManagerID': 6,      '@AccountManagerName': 'UpdateProfile',      '@SaleCreatorID': 10035,      '@SaleCreatorName': 'amr.adel',      '@UCID': '0055000000',      '@ActionById': 10035,      '@ActionByUsername': 'amr.adel',      'CustomerOrderItemList': {        'CustomerOrderItem': [          {            '@ID': 76,            '@CustomerOrderID': 59,            '@ProductOfferingID': 8,            '@ProductOfferingName': 'Net-Meter - Basic',            '@ProductOfferingFamilyID': 10,            '@ProductOfferingFamilyName': 'Net-Meter',            '@ProductCatalogID': 1,            '@ProductCatalogName': 'Standard Consumers',            '@ActivationPrice': '4000',            '@InstallmentPrice': '0',            'DiscountList': {              'Discount': []            },            'ProductList': {              'Product': [                {                  'DynamicData': {                    'PhysicalResource_SID': '246',                    'PhysicalResource_Serial': ''                  },                  'DynamicProductData': {},                  'DynamicServiceData': {},                  'DynamicPhysicalResourceData': {                    'SID': '246',                    'Serial': ''                  },                  'DynamicLogicalResourceData': {},                  '@ID': 298,                  '@CustomerOrderItemID': 76,                  '@Type': 'NetMeter',                  '@ProductSpecificationID': 7,                  '@ProductSpecificationName': 'Net-Meter - Basic',                  '@ProvisionStatus': 'NotProvisioned',                  '@IsBillingActive': false,                  '@BillingStartDate': null,                  '@BillingEndDate': null,                  '@Recurring': 'Sold',                  '@FactoryID': 111                }              ]            }          }        ]      }    }  }");
            string expected = "amr.adel modified the sale with sale order number 000000000019 through \"Tracer website\". The following are the list of the changes:\r\n\r\n1. Action by id changed from 1 to 10035\r\n2. Action by username changed from administrator to amr.adel\r\n3. Discount removed with the criteria: [ID is 48, customer order item ID is 76, \"amount in percent\" is 10, precedence is 2, discount specification ID is 2, discount specification name is Compound, no main count, no remaining count, \"is active\" is True, start date is Thu, 16 Aug, 2018 05:03 PM, end date is Wed, 16 Aug, 2028 05:03 PM, action by id is 1, action by username is administrator]\r\n\r\n";

             SimpleTemplate.Business.TemplateProcesser processer = new SimpleTemplate.Business.TemplateProcesser(_OrderUpdated_Template, data, _OrderUpdated_Mapping);

            Assert.AreEqual(expected, processer.Result);
        }

        [TestMethod]
        public void TestWholeEvent15()
        {
            JObject data = JObject.Parse(@"{    '@Id': 48,    '@Operation': 'Discount Removed',    '@Date': '2018-08-16 17:14:46',    '@Reason': 'Discount Removed',    '@Source': 'Customer Order Updated',    '@UCID': '0055000000',    '@ActionById': 10035,    '@ActionByUsername': 'amr.adel',    '@PurchaseOrderNumber': '000000000019',    '@PurchaseOrderNumberID': 65,    '@CustomerOrderItemID': 76,    'CustomerOrderItem': {      '@ID': 76,      '@CustomerOrderID': 59,      '@ProductOfferingID': 8,      '@ProductOfferingName': 'Net-Meter - Basic',      '@ProductOfferingFamilyID': 10,      '@ProductOfferingFamilyName': 'Net-Meter',      '@ProductCatalogID': 1,      '@ProductCatalogName': 'Standard Consumers',      '@ActivationPrice': '4000',      '@InstallmentPrice': '0',      'DiscountList': {        'Discount': []      },      'ProductList': {        'Product': [          {            'DynamicData': {              'PhysicalResource_SID': '246',              'PhysicalResource_Serial': ''            },            'DynamicProductData': {},            'DynamicServiceData': {},            'DynamicPhysicalResourceData': {              'SID': '246',              'Serial': ''            },            'DynamicLogicalResourceData': {},            '@ID': 298,            '@CustomerOrderItemID': 76,            '@Type': 'NetMeter',            '@ProductSpecificationID': 7,            '@ProductSpecificationName': 'Net-Meter - Basic',            '@ProvisionStatus': 'NotProvisioned',            '@IsBillingActive': false,            '@BillingStartDate': null,            '@BillingEndDate': null,            '@Recurring': 'Sold',            '@FactoryID': 111          }        ]      }    },    'Discount': {      '@ID': 48,      '@CustomerOrderItemID': 76,      '@AmountInPercent': '10',      '@Precedence': 2,      '@DiscountSpecificationID': 2,      '@DiscountSpecificationName': 'Compound',      '@MainCount': null,      '@RemainingCount': null,      '@IsActive': true,      '@StartDate': '2018-08-16 17:03:50',      '@EndDate': '2028-08-16 17:03:50',      '@ActionById': 10035,      '@ActionByUsername': 'amr.adel'    }  }");
            string expected = "amr.adel removed the discount Compound with 10 % from the product offering Net-Meter - Basic.";

             SimpleTemplate.Business.TemplateProcesser processer = new SimpleTemplate.Business.TemplateProcesser(_DiscountRemoved_Template, data, _Empty_Mapping);

            Assert.AreEqual(expected, processer.Result);
        }

        [TestMethod]
        public void TestWholeEvent16()
        {
            JObject data = JObject.Parse(@"{    '@Id': 0,    '@Operation': 'Customer Order Updated',    '@Date': '2018-08-16 17:08:31',    '@Reason': 'Customer Order Updated',    '@Source': 'Customer Order Updated',    '@UCID': '0055000000',    '@ActionById': 1,    '@ActionByUsername': 'administrator',    '@PurchaseOrderNumber': '000000000019',    '@PurchaseOrderNumberID': 65,    'CustomerProfile': {      '@ID': 10050,      '@Title': 'Dr',      '@BusinessTitle': null,      '@UCID': '0055000000',      '@Username': 'fire.bird',      '@BirthDate': '2018-08-15 00:00:00',      '@Gender': 'Male',      '@ProfileType': 'Subscriber',      '@IsCorporate': false,      '@CorporateDueDay': null,      '@Status': 'Active',      '@Reason': 'Active',      '@GeographicalRegion': 'Badr City',      '@OrganizationHierarchy': null,      '@CSOOrganizationHierarchy': 'Maadi',      '@Nationality': 'Egypt',      '@MembershipDate': '2018-08-16 00:00:00',      '@Comments': '',      '@Occupation': 'Manager',      '@CompanyActivity': 'Facebook',      '@ProfileCreatorID': 10035,      '@NationalID': '',      '@PassportID': '',      '@ActionById': 10035,      '@ActionByUsername': 'amr.adel',      'NameList': {        'Name': [          {            '@Language': 'English',            '@FirstName': 'fire',            '@MiddleName': '',            '@LastName': 'bird'          }        ]      },      'EmailList': {        'Email': [          {            '@Email': 'fire.bird@mail.net',            '@EmailType': 'Preferred'          }        ]      },      'TelephoneList': {        'Telephone': [          {            '@TelephoneNo': '0223323423',            '@TelephoneType': 'Home Telephone'          }        ]      },      'AddressList': {        'Address': [          {            '@Language': 'English',            '@Address1': 'test address2',            '@Address2': ' ',            '@ZipCode': ''          }        ]      },      'ContactList': {        'Contact': []      },      'ProfileRelationsList': null,      'ProfileCategoryList': {        'ProfileCategory': [          {            '@ProfileCategoryName': 'Standard'          }        ]      }    },    'OldCustomerOrder': {      '@ID': 59,      '@BusinessStatus': 'New',      '@PurchaseOrderNumber': '000000000019',      '@PurchaseOrderNumberID': 65,      '@PurchaseDate': '2018-08-16 14:53:54',      '@ResellerUsername': '',      '@ResellerProfileID': null,      '@ResellerUCID': '',      '@ResellerType': '',      '@PaymentTerm': 3,      '@ContractDuration': 12,      '@SalesAllocation': 'Roma',      '@BillingLocation': 'CUSTOMER',      '@IsCommitment': false,      '@PaymentMethod': 'Cash',      '@ProfileID': 10050,      '@AccountManagerID': 6,      '@AccountManagerName': 'UpdateProfile',      '@SaleCreatorID': 10035,      '@SaleCreatorName': 'amr.adel',      '@UCID': '0055000000',      '@ActionById': 10037,      '@ActionByUsername': 'hussein.ayman',      'CustomerOrderItemList': {        'CustomerOrderItem': [          {            '@ID': 76,            '@CustomerOrderID': 59,            '@ProductOfferingID': 8,            '@ProductOfferingName': 'Net-Meter - Basic',            '@ProductOfferingFamilyID': 10,            '@ProductOfferingFamilyName': 'Net-Meter',            '@ProductCatalogID': 1,            '@ProductCatalogName': 'Standard Consumers',            '@ActivationPrice': '4000',            '@InstallmentPrice': '0',            'DiscountList': {              'Discount': [                {                  '@ID': 48,                  '@CustomerOrderItemID': 76,                  '@AmountInPercent': '20',                  '@Precedence': 2,                  '@DiscountSpecificationID': 2,                  '@DiscountSpecificationName': 'Compound',                  '@MainCount': null,                  '@RemainingCount': null,                  '@IsActive': true,                  '@StartDate': '2018-08-16 17:03:50',                  '@EndDate': '2028-08-16 17:03:50',                  '@ActionById': 10037,                  '@ActionByUsername': 'hussein.ayman'                }              ]            },            'ProductList': {              'Product': [                {                  'DynamicData': {                    'PhysicalResource_SID': '246',                    'PhysicalResource_Serial': ''                  },                  'DynamicProductData': {},                  'DynamicServiceData': {},                  'DynamicPhysicalResourceData': {                    'SID': '246',                    'Serial': ''                  },                  'DynamicLogicalResourceData': {},                  '@ID': 298,                  '@CustomerOrderItemID': 76,                  '@Type': 'NetMeter',                  '@ProductSpecificationID': 7,                  '@ProductSpecificationName': 'Net-Meter - Basic',                  '@ProvisionStatus': 'NotProvisioned',                  '@IsBillingActive': false,                  '@BillingStartDate': null,                  '@BillingEndDate': null,                  '@Recurring': 'Sold',                  '@FactoryID': 111                }              ]            }          }        ]      }    },    'NewCustomerOrder': {      '@ID': 59,      '@BusinessStatus': 'New',      '@PurchaseOrderNumber': '000000000019',      '@PurchaseOrderNumberID': 65,      '@PurchaseDate': '2018-08-16 14:53:54',      '@ResellerUsername': '',      '@ResellerProfileID': null,      '@ResellerUCID': '',      '@ResellerType': '',      '@PaymentTerm': 3,      '@ContractDuration': 12,      '@SalesAllocation': 'Roma',      '@BillingLocation': 'CUSTOMER',      '@IsCommitment': false,      '@PaymentMethod': 'Cash',      '@ProfileID': 10050,      '@AccountManagerID': 6,      '@AccountManagerName': 'UpdateProfile',      '@SaleCreatorID': 10035,      '@SaleCreatorName': 'amr.adel',      '@UCID': '0055000000',      '@ActionById': 1,      '@ActionByUsername': 'administrator',      'CustomerOrderItemList': {        'CustomerOrderItem': [          {            '@ID': 76,            '@CustomerOrderID': 59,            '@ProductOfferingID': 8,            '@ProductOfferingName': 'Net-Meter - Basic',            '@ProductOfferingFamilyID': 10,            '@ProductOfferingFamilyName': 'Net-Meter',            '@ProductCatalogID': 1,            '@ProductCatalogName': 'Standard Consumers',            '@ActivationPrice': '4000',            '@InstallmentPrice': '0',            'DiscountList': {              'Discount': [                {                  '@ID': 48,                  '@CustomerOrderItemID': 76,                  '@AmountInPercent': '10',                  '@Precedence': 2,                  '@DiscountSpecificationID': 2,                  '@DiscountSpecificationName': 'Compound',                  '@MainCount': null,                  '@RemainingCount': null,                  '@IsActive': true,                  '@StartDate': '2018-08-16 17:03:50',                  '@EndDate': '2028-08-16 17:03:50',                  '@ActionById': 1,                  '@ActionByUsername': 'administrator'                }              ]            },            'ProductList': {              'Product': [                {                  'DynamicData': {                    'PhysicalResource_SID': '246',                    'PhysicalResource_Serial': ''                  },                  'DynamicProductData': {},                  'DynamicServiceData': {},                  'DynamicPhysicalResourceData': {                    'SID': '246',                    'Serial': ''                  },                  'DynamicLogicalResourceData': {},                  '@ID': 298,                  '@CustomerOrderItemID': 76,                  '@Type': 'NetMeter',                  '@ProductSpecificationID': 7,                  '@ProductSpecificationName': 'Net-Meter - Basic',                  '@ProvisionStatus': 'NotProvisioned',                  '@IsBillingActive': false,                  '@BillingStartDate': null,                  '@BillingEndDate': null,                  '@Recurring': 'Sold',                  '@FactoryID': 111                }              ]            }          }        ]      }    }  }");
            string expected = "administrator modified the sale with sale order number 000000000019 through \"Tracer website\". The following are the list of the changes:\r\n\r\n1. Action by id changed from 10037 to 1\r\n2. Action by username changed from hussein.ayman to administrator\r\n3. Discount modified \"amount in percent\" from 20 to 10\r\n4. Discount modified action by id from 10037 to 1\r\n5. Discount modified action by username from hussein.ayman to administrator\r\n\r\n";

             SimpleTemplate.Business.TemplateProcesser processer = new SimpleTemplate.Business.TemplateProcesser(_OrderUpdated_Template, data, _OrderUpdated_Mapping);

            Assert.AreEqual(expected, processer.Result);
        }
        
        [TestMethod]
        public void TestWholeEvent17()
        {
            JObject data = JObject.Parse(@"{    '@Id': 48,    '@Operation': 'Discount updated',    '@Date': '2018-08-16 17:07:53',    '@Reason': 'Discount Updated',    '@Source': 'Customer Order Updated',    '@UCID': '0055000000',    '@ActionById': 1,    '@ActionByUsername': 'administrator',    '@PurchaseOrderNumber': '000000000019',    '@PurchaseOrderNumberID': 65,    '@CustomerOrderItemID': 76,    'CustomerOrderItem': {      '@ID': 76,      '@CustomerOrderID': 59,      '@ProductOfferingID': 8,      '@ProductOfferingName': 'Net-Meter - Basic',      '@ProductOfferingFamilyID': 10,      '@ProductOfferingFamilyName': 'Net-Meter',      '@ProductCatalogID': 1,      '@ProductCatalogName': 'Standard Consumers',      '@ActivationPrice': '4000',      '@InstallmentPrice': '0',      'DiscountList': {        'Discount': [          {            '@ID': 48,            '@CustomerOrderItemID': 76,            '@AmountInPercent': '10',            '@Precedence': 2,            '@DiscountSpecificationID': 2,            '@DiscountSpecificationName': 'Compound',            '@MainCount': null,            '@RemainingCount': null,            '@IsActive': true,            '@StartDate': '2018-08-16 17:03:50',            '@EndDate': '2028-08-16 17:03:50',            '@ActionById': 1,            '@ActionByUsername': 'administrator'          }        ]      },      'ProductList': {        'Product': [          {            'DynamicData': {              'PhysicalResource_SID': '246',              'PhysicalResource_Serial': ''            },            'DynamicProductData': {},            'DynamicServiceData': {},            'DynamicPhysicalResourceData': {              'SID': '246',              'Serial': ''            },            'DynamicLogicalResourceData': {},            '@ID': 298,            '@CustomerOrderItemID': 76,            '@Type': 'NetMeter',            '@ProductSpecificationID': 7,            '@ProductSpecificationName': 'Net-Meter - Basic',            '@ProvisionStatus': 'NotProvisioned',            '@IsBillingActive': false,            '@BillingStartDate': null,            '@BillingEndDate': null,            '@Recurring': 'Sold',            '@FactoryID': 111          }        ]      }    },    'NewDiscount': {      '@ID': 48,      '@CustomerOrderItemID': 76,      '@AmountInPercent': '10',      '@Precedence': 2,      '@DiscountSpecificationID': 2,      '@DiscountSpecificationName': 'Compound',      '@MainCount': null,      '@RemainingCount': null,      '@IsActive': true,      '@StartDate': '2018-08-16 17:03:50',      '@EndDate': '2028-08-16 17:03:50',      '@ActionById': 1,      '@ActionByUsername': 'administrator'    },    'OldDiscount': {      '@ID': 48,      '@CustomerOrderItemID': 76,      '@AmountInPercent': '20',      '@Precedence': 2,      '@DiscountSpecificationID': 2,      '@DiscountSpecificationName': 'Compound',      '@MainCount': null,      '@RemainingCount': null,      '@IsActive': true,      '@StartDate': '2018-08-16 17:03:50',      '@EndDate': '2028-08-16 17:03:50',      '@ActionById': 10037,      '@ActionByUsername': 'hussein.ayman'    }  }");
            string expected = "administrator updated the discount of Compound on the product offering Net-Meter - Basic. The following are the list of the changes:\r\n\r\n1. \"amount in percent\" changed from 20 to 10\r\n2. Action by id changed from 10037 to 1\r\n3. Action by username changed from hussein.ayman to administrator\r\n\r\n";

             SimpleTemplate.Business.TemplateProcesser processer = new SimpleTemplate.Business.TemplateProcesser(_DiscountUpdated_Template, data, _Empty_Mapping);

            Assert.AreEqual(expected, processer.Result);
        }
        
        [TestMethod]
        public void TestWholeEvent18()
        {
            JObject data = JObject.Parse(@"{    '@Id': 0,    '@Operation': 'Customer Order Updated',    '@Date': '2018-08-16 17:04:08',    '@Reason': 'Customer Order Updated',    '@Source': 'Customer Order Updated',    '@UCID': '0055000000',    '@ActionById': 10037,    '@ActionByUsername': 'hussein.ayman',    '@PurchaseOrderNumber': '000000000019',    '@PurchaseOrderNumberID': 65,    'CustomerProfile': {      '@ID': 10050,      '@Title': 'Dr',      '@BusinessTitle': null,      '@UCID': '0055000000',      '@Username': 'fire.bird',      '@BirthDate': '2018-08-15 00:00:00',      '@Gender': 'Male',      '@ProfileType': 'Subscriber',      '@IsCorporate': false,      '@CorporateDueDay': null,      '@Status': 'Active',      '@Reason': 'Active',      '@GeographicalRegion': 'Badr City',      '@OrganizationHierarchy': null,      '@CSOOrganizationHierarchy': 'Maadi',      '@Nationality': 'Egypt',      '@MembershipDate': '2018-08-16 00:00:00',      '@Comments': '',      '@Occupation': 'Manager',      '@CompanyActivity': 'Facebook',      '@ProfileCreatorID': 10035,      '@NationalID': '',      '@PassportID': '',      '@ActionById': 10035,      '@ActionByUsername': 'amr.adel',      'NameList': {        'Name': [          {            '@Language': 'English',            '@FirstName': 'fire',            '@MiddleName': '',            '@LastName': 'bird'          }        ]      },      'EmailList': {        'Email': [          {            '@Email': 'fire.bird@mail.net',            '@EmailType': 'Preferred'          }        ]      },      'TelephoneList': {        'Telephone': [          {            '@TelephoneNo': '0223323423',            '@TelephoneType': 'Home Telephone'          }        ]      },      'AddressList': {        'Address': [          {            '@Language': 'English',            '@Address1': 'test address2',            '@Address2': ' ',            '@ZipCode': ''          }        ]      },      'ContactList': {        'Contact': []      },      'ProfileRelationsList': null,      'ProfileCategoryList': {        'ProfileCategory': [          {            '@ProfileCategoryName': 'Standard'          }        ]      }    },    'OldCustomerOrder': {      '@ID': 59,      '@BusinessStatus': 'New',      '@PurchaseOrderNumber': '000000000019',      '@PurchaseOrderNumberID': 65,      '@PurchaseDate': '2018-08-16 14:53:54',      '@ResellerUsername': '',      '@ResellerProfileID': null,      '@ResellerUCID': '',      '@ResellerType': '',      '@PaymentTerm': 3,      '@ContractDuration': 12,      '@SalesAllocation': 'Roma',      '@BillingLocation': 'CUSTOMER',      '@IsCommitment': false,      '@PaymentMethod': 'Cash',      '@ProfileID': 10050,      '@AccountManagerID': 6,      '@AccountManagerName': 'UpdateProfile',      '@SaleCreatorID': 10035,      '@SaleCreatorName': 'amr.adel',      '@UCID': '0055000000',      '@ActionById': 1,      '@ActionByUsername': 'administrator',      'CustomerOrderItemList': {        'CustomerOrderItem': [          {            '@ID': 76,            '@CustomerOrderID': 59,            '@ProductOfferingID': 8,            '@ProductOfferingName': 'Net-Meter - Basic',            '@ProductOfferingFamilyID': 10,            '@ProductOfferingFamilyName': 'Net-Meter',            '@ProductCatalogID': 1,            '@ProductCatalogName': 'Standard Consumers',            '@ActivationPrice': '4000',            '@InstallmentPrice': '0',            'DiscountList': {              'Discount': []            },            'ProductList': {              'Product': [                {                  'DynamicData': {                    'PhysicalResource_SID': '246',                    'PhysicalResource_Serial': ''                  },                  'DynamicProductData': {},                  'DynamicServiceData': {},                  'DynamicPhysicalResourceData': {                    'SID': '246',                    'Serial': ''                  },                  'DynamicLogicalResourceData': {},                  '@ID': 298,                  '@CustomerOrderItemID': 76,                  '@Type': 'NetMeter',                  '@ProductSpecificationID': 7,                  '@ProductSpecificationName': 'Net-Meter - Basic',                  '@ProvisionStatus': 'NotProvisioned',                  '@IsBillingActive': false,                  '@BillingStartDate': null,                  '@BillingEndDate': null,                  '@Recurring': 'Sold',                  '@FactoryID': 111                }              ]            }          }        ]      }    },    'NewCustomerOrder': {      '@ID': 59,      '@BusinessStatus': 'New',      '@PurchaseOrderNumber': '000000000019',      '@PurchaseOrderNumberID': 65,      '@PurchaseDate': '2018-08-16 14:53:54',      '@ResellerUsername': '',      '@ResellerProfileID': null,      '@ResellerUCID': '',      '@ResellerType': '',      '@PaymentTerm': 3,      '@ContractDuration': 12,      '@SalesAllocation': 'Roma',      '@BillingLocation': 'CUSTOMER',      '@IsCommitment': false,      '@PaymentMethod': 'Cash',      '@ProfileID': 10050,      '@AccountManagerID': 6,      '@AccountManagerName': 'UpdateProfile',      '@SaleCreatorID': 10035,      '@SaleCreatorName': 'amr.adel',      '@UCID': '0055000000',      '@ActionById': 10037,      '@ActionByUsername': 'hussein.ayman',      'CustomerOrderItemList': {        'CustomerOrderItem': [          {            '@ID': 76,            '@CustomerOrderID': 59,            '@ProductOfferingID': 8,            '@ProductOfferingName': 'Net-Meter - Basic',            '@ProductOfferingFamilyID': 10,            '@ProductOfferingFamilyName': 'Net-Meter',            '@ProductCatalogID': 1,            '@ProductCatalogName': 'Standard Consumers',            '@ActivationPrice': '4000',            '@InstallmentPrice': '0',            'DiscountList': {              'Discount': [                {                  '@ID': 48,                  '@CustomerOrderItemID': 76,                  '@AmountInPercent': '20',                  '@Precedence': 2,                  '@DiscountSpecificationID': 2,                  '@DiscountSpecificationName': 'Compound',                  '@MainCount': null,                  '@RemainingCount': null,                  '@IsActive': true,                  '@StartDate': '2018-08-16 17:03:50',                  '@EndDate': '2028-08-16 17:03:50',                  '@ActionById': 10037,                  '@ActionByUsername': 'hussein.ayman'                }              ]            },            'ProductList': {              'Product': [                {                  'DynamicData': {                    'PhysicalResource_SID': '246',                    'PhysicalResource_Serial': ''                  },                  'DynamicProductData': {},                  'DynamicServiceData': {},                  'DynamicPhysicalResourceData': {                    'SID': '246',                    'Serial': ''                  },                  'DynamicLogicalResourceData': {},                  '@ID': 298,                  '@CustomerOrderItemID': 76,                  '@Type': 'NetMeter',                  '@ProductSpecificationID': 7,                  '@ProductSpecificationName': 'Net-Meter - Basic',                  '@ProvisionStatus': 'NotProvisioned',                  '@IsBillingActive': false,                  '@BillingStartDate': null,                  '@BillingEndDate': null,                  '@Recurring': 'Sold',                  '@FactoryID': 111                }              ]            }          }        ]      }    }  }");
            string expected = "hussein.ayman modified the sale with sale order number 000000000019 through \"Tracer website\". The following are the list of the changes:\r\n\r\n1. Action by id changed from 1 to 10037\r\n2. Action by username changed from administrator to hussein.ayman\r\n3. Discount added with the criteria: [ID is 48, customer order item ID is 76, \"amount in percent\" is 20, precedence is 2, discount specification ID is 2, discount specification name is Compound, no main count, no remaining count, \"is active\" is True, start date is Thu, 16 Aug, 2018 05:03 PM, end date is Wed, 16 Aug, 2028 05:03 PM, action by id is 10037, action by username is hussein.ayman]\r\n\r\n";

             SimpleTemplate.Business.TemplateProcesser processer = new SimpleTemplate.Business.TemplateProcesser(_OrderUpdated_Template, data, _OrderUpdated_Mapping);

            Assert.AreEqual(expected, processer.Result);
        }
        
        [TestMethod]
        public void TestWholeEvent19()
        {
            JObject data = JObject.Parse(@"{    '@Id': 48,    '@Operation': 'Discount Added',    '@Date': '2018-08-16 17:03:59',    '@Reason': 'Discount Added',    '@Source': 'Customer Order Updated',    '@UCID': '0055000000',    '@ActionById': 10037,    '@ActionByUsername': 'hussein.ayman',    '@PurchaseOrderNumber': '000000000019',    '@PurchaseOrderNumberID': 65,    '@CustomerOrderItemID': 76,    'CustomerOrderItem': {      '@ID': 76,      '@CustomerOrderID': 59,      '@ProductOfferingID': 8,      '@ProductOfferingName': 'Net-Meter - Basic',      '@ProductOfferingFamilyID': 10,      '@ProductOfferingFamilyName': 'Net-Meter',      '@ProductCatalogID': 1,      '@ProductCatalogName': 'Standard Consumers',      '@ActivationPrice': '4000',      '@InstallmentPrice': '0',      'DiscountList': {        'Discount': [          {            '@ID': 48,            '@CustomerOrderItemID': 76,            '@AmountInPercent': '20',            '@Precedence': 2,            '@DiscountSpecificationID': 2,            '@DiscountSpecificationName': 'Compound',            '@MainCount': null,            '@RemainingCount': null,            '@IsActive': true,            '@StartDate': '2018-08-16 17:03:50',            '@EndDate': '2028-08-16 17:03:50',            '@ActionById': 10037,            '@ActionByUsername': 'hussein.ayman'          }        ]      },      'ProductList': {        'Product': [          {            'DynamicData': {              'PhysicalResource_SID': '246',              'PhysicalResource_Serial': ''            },            'DynamicProductData': {},            'DynamicServiceData': {},            'DynamicPhysicalResourceData': {              'SID': '246',              'Serial': ''            },            'DynamicLogicalResourceData': {},            '@ID': 298,            '@CustomerOrderItemID': 76,            '@Type': 'NetMeter',            '@ProductSpecificationID': 7,            '@ProductSpecificationName': 'Net-Meter - Basic',            '@ProvisionStatus': 'NotProvisioned',            '@IsBillingActive': false,            '@BillingStartDate': null,            '@BillingEndDate': null,            '@Recurring': 'Sold',            '@FactoryID': 111          }        ]      }    },    'Discount': {      '@ID': 48,      '@CustomerOrderItemID': 76,      '@AmountInPercent': '20',      '@Precedence': 2,      '@DiscountSpecificationID': 2,      '@DiscountSpecificationName': 'Compound',      '@MainCount': null,      '@RemainingCount': null,      '@IsActive': true,      '@StartDate': '2018-08-16 17:03:50',      '@EndDate': '2028-08-16 17:03:50',      '@ActionById': 10037,      '@ActionByUsername': 'hussein.ayman'    }  }");
            string expected = "hussein.ayman added the discount Compound with 20 % on the product offering Net-Meter - Basic";

             SimpleTemplate.Business.TemplateProcesser processer = new SimpleTemplate.Business.TemplateProcesser(_DiscountAdded_Template, data, _Empty_Mapping);

            Assert.AreEqual(expected, processer.Result);
        }
        
        [TestMethod]
        public void TestWholeEvent20()
        {
            JObject data = JObject.Parse(@"{    '@Id': 47,    '@Operation': 'Discount Added',    '@Date': '2018-08-16 16:10:00',    '@Reason': 'Discount Added',    '@Source': 'Customer Order Updated',    '@UCID': '0055000000',    '@ActionById': 10037,    '@ActionByUsername': 'hussein.ayman',    '@PurchaseOrderNumber': '000000000019',    '@PurchaseOrderNumberID': 65,    '@CustomerOrderItemID': 76,    'CustomerOrderItem': {      '@ID': 76,      '@CustomerOrderID': 59,      '@ProductOfferingID': 8,      '@ProductOfferingName': 'Net-Meter - Basic',      '@ProductOfferingFamilyID': 10,      '@ProductOfferingFamilyName': 'Net-Meter',      '@ProductCatalogID': 1,      '@ProductCatalogName': 'Standard Consumers',      '@ActivationPrice': '4000',      '@InstallmentPrice': '0',      'DiscountList': {        'Discount': [          {            '@ID': 47,            '@CustomerOrderItemID': 76,            '@AmountInPercent': '30',            '@Precedence': 2,            '@DiscountSpecificationID': 1,            '@DiscountSpecificationName': 'Family and Friends',            '@MainCount': null,            '@RemainingCount': null,            '@IsActive': true,            '@StartDate': '2018-08-16 16:08:03',            '@EndDate': '2028-08-16 16:08:03',            '@ActionById': 10037,            '@ActionByUsername': 'hussein.ayman'          }        ]      },      'ProductList': {        'Product': [          {            'DynamicData': {              'PhysicalResource_SID': '246',              'PhysicalResource_Serial': ''            },            'DynamicProductData': {},            'DynamicServiceData': {},            'DynamicPhysicalResourceData': {              'SID': '246',              'Serial': ''            },            'DynamicLogicalResourceData': {},            '@ID': 298,            '@CustomerOrderItemID': 76,            '@Type': 'NetMeter',            '@ProductSpecificationID': 7,            '@ProductSpecificationName': 'Net-Meter - Basic',            '@ProvisionStatus': 'NotProvisioned',            '@IsBillingActive': false,            '@BillingStartDate': null,            '@BillingEndDate': null,            '@Recurring': 'Sold',            '@FactoryID': 111          }        ]      }    },    'Discount': {      '@ID': 47,      '@CustomerOrderItemID': 76,      '@AmountInPercent': '30',      '@Precedence': 2,      '@DiscountSpecificationID': 1,      '@DiscountSpecificationName': 'Family and Friends',      '@MainCount': null,      '@RemainingCount': null,      '@IsActive': true,      '@StartDate': '2018-08-16 16:08:03',      '@EndDate': '2028-08-16 16:08:03',      '@ActionById': 10037,      '@ActionByUsername': 'hussein.ayman'    }  }");
            string expected = "hussein.ayman added the discount Family and Friends with 30 % on the product offering Net-Meter - Basic";

             SimpleTemplate.Business.TemplateProcesser processer = new SimpleTemplate.Business.TemplateProcesser(_DiscountAdded_Template, data, _Empty_Mapping);

            Assert.AreEqual(expected, processer.Result);
        }

        [TestMethod]
        public void TestWholeEvent21()
        {
            JObject data = JObject.Parse(@"{    '@Id': 0,    '@Operation': 'Customer Order Added',    '@Date': '2018-08-16 14:53:54',    '@Reason': 'Customer Order Added',    '@Source': 'Customer Order Added',    '@UCID': '0055000000',    '@ActionById': 10035,    '@ActionByUsername': 'amr.adel',    '@PurchaseOrderNumber': '000000000019',    '@PurchaseOrderNumberID': 65,    'CustomerProfile': {      '@ID': 10050,      '@Title': 'Dr',      '@BusinessTitle': null,      '@UCID': '0055000000',      '@Username': 'fire.bird',      '@BirthDate': '2018-08-15 00:00:00',      '@Gender': 'Male',      '@ProfileType': 'Subscriber',      '@IsCorporate': false,      '@CorporateDueDay': null,      '@Status': 'Active',      '@Reason': 'Active',      '@GeographicalRegion': 'Badr City',      '@OrganizationHierarchy': null,      '@CSOOrganizationHierarchy': 'Maadi',      '@Nationality': 'Egypt',      '@MembershipDate': '2018-08-16 00:00:00',      '@Comments': '',      '@Occupation': 'Manager',      '@CompanyActivity': 'Facebook',      '@ProfileCreatorID': 10035,      '@NationalID': '',      '@PassportID': '',      '@ActionById': 10035,      '@ActionByUsername': 'amr.adel',      'NameList': {        'Name': [          {            '@Language': 'English',            '@FirstName': 'fire',            '@MiddleName': '',            '@LastName': 'bird'          }        ]      },      'EmailList': {        'Email': [          {            '@Email': 'fire.bird@mail.net',            '@EmailType': 'Preferred'          }        ]      },      'TelephoneList': {        'Telephone': [          {            '@TelephoneNo': '0223323423',            '@TelephoneType': 'Home Telephone'          }        ]      },      'AddressList': {        'Address': [          {            '@Language': 'English',            '@Address1': 'test address2',            '@Address2': ' ',            '@ZipCode': ''          }        ]      },      'ContactList': {        'Contact': []      },      'ProfileRelationsList': null,      'ProfileCategoryList': {        'ProfileCategory': [          {            '@ProfileCategoryName': 'Standard'          }        ]      }    },    'CustomerOrder': {      '@ID': 59,      '@BusinessStatus': 'New',      '@PurchaseOrderNumber': '000000000019',      '@PurchaseOrderNumberID': 65,      '@PurchaseDate': '2018-08-16 14:53:54',      '@ResellerUsername': '',      '@ResellerProfileID': null,      '@ResellerUCID': '',      '@ResellerType': '',      '@PaymentTerm': 1,      '@ContractDuration': 12,      '@SalesAllocation': 'Roma',      '@BillingLocation': 'CUSTOMER',      '@IsCommitment': false,      '@PaymentMethod': 'Cash',      '@ProfileID': 10050,      '@AccountManagerID': 6,      '@AccountManagerName': 'UpdateProfile',      '@SaleCreatorID': 10035,      '@SaleCreatorName': 'amr.adel',      '@UCID': '0055000000',      '@ActionById': 10035,      '@ActionByUsername': 'amr.adel',      'CustomerOrderItemList': {        'CustomerOrderItem': [          {            '@ID': 76,            '@CustomerOrderID': 59,            '@ProductOfferingID': 8,            '@ProductOfferingName': 'Net-Meter - Basic',            '@ProductOfferingFamilyID': 10,            '@ProductOfferingFamilyName': 'Net-Meter',            '@ProductCatalogID': 1,            '@ProductCatalogName': 'Standard Consumers',            '@ActivationPrice': '4000',            '@InstallmentPrice': '0',            'DiscountList': {              'Discount': []            },            'ProductList': {              'Product': [                {                  'DynamicData': {                    'PhysicalResource_SID': '246',                    'PhysicalResource_Serial': ''                  },                  'DynamicProductData': {},                  'DynamicServiceData': {},                  'DynamicPhysicalResourceData': {                    'SID': '246',                    'Serial': ''                  },                  'DynamicLogicalResourceData': {},                  '@ID': 298,                  '@CustomerOrderItemID': 76,                  '@Type': 'NetMeter',                  '@ProductSpecificationID': 7,                  '@ProductSpecificationName': 'Net-Meter - Basic',                  '@ProvisionStatus': 'NotProvisioned',                  '@IsBillingActive': false,                  '@BillingStartDate': null,                  '@BillingEndDate': null,                  '@Recurring': 'Sold',                  '@FactoryID': 111                }              ]            }          }        ]      }    }  }");
            string expected = "amr.adel created new sale for fire.bird with sale order number 000000000019 through \"Tracer website\".";

             SimpleTemplate.Business.TemplateProcesser processer = new SimpleTemplate.Business.TemplateProcesser(_OrderAdded_Template, data, _OrderAdded_Mapping);

            Assert.AreEqual(expected, processer.Result);
        }
        
        [TestMethod]
        public void TestWholeEvent22()
        {
            JObject data = JObject.Parse(@"{    '@Id': 0,    '@ProfileID': 10050,    '@Operation': 'Customer Profile Added',    '@Date': '2018-08-16 14:37:37',    '@Reason': 'Profile Added',    '@Source': 'Customer Profile Added',    '@UCID': '0055000000',    '@ActionById': 1,    '@ActionByUsername': 'administrator',    'CustomerProfile': {      '@ID': 10050,      '@Title': 'Dr',      '@BusinessTitle': null,      '@UCID': '0055000000',      '@Username': 'fire.bird',      '@BirthDate': '2018-08-15 00:00:00',      '@Gender': 'Male',      '@ProfileType': 'Subscriber',      '@IsCorporate': false,      '@CorporateDueDay': null,      '@Status': 'Active',      '@Reason': 'Active',      '@GeographicalRegion': 'Badr City',      '@OrganizationHierarchy': null,      '@CSOOrganizationHierarchy': 'Maadi',      '@Nationality': 'Egypt',      '@MembershipDate': '2018-08-16 00:00:00',      '@Comments': '',      '@Occupation': 'Manager',      '@CompanyActivity': 'Facebook',      '@ProfileCreatorID': 1,      '@NationalID': '',      '@PassportID': '',      '@ActionById': 1,      '@ActionByUsername': 'administrator',      'NameList': {        'Name': [          {            '@Language': 'English',            '@FirstName': 'fire',            '@MiddleName': '',            '@LastName': 'bird'          }        ]      },      'EmailList': {        'Email': [          {            '@Email': 'fire.bird@mail.net',            '@EmailType': 'Preferred'          }        ]      },      'TelephoneList': {        'Telephone': [          {            '@TelephoneNo': '0223323423',            '@TelephoneType': 'Home Telephone'          }        ]      },      'AddressList': {        'Address': [          {            '@Language': 'English',            '@Address1': 'test address',            '@Address2': ' ',            '@ZipCode': ''          }        ]      },      'ContactList': {        'Contact': []      },      'ProfileRelationsList': null,      'ProfileCategoryList': {        'ProfileCategory': [          {            '@ProfileCategoryName': 'Standard'          }        ]      }    }  }");
            string expected = "administrator created new profile for fire.bird through \"Tracer website\"";

             SimpleTemplate.Business.TemplateProcesser processer = new SimpleTemplate.Business.TemplateProcesser(_ProfileAdded_Template, data, _ProfileAdded_Mapping);

            Assert.AreEqual(expected, processer.Result);
        }
    }
}
